{"version":3,"sources":["logo.svg","localStorage.js","Input.js","CustomButton.js","API.js","Login.js","Header.js","Menu.js","ExtrasSideMenu.js","MailBox.js","Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","UsersData","email","password","fullName","id1","Math","random","toString","replace","id2","MessagesData","mid","date","Date","toGMTString","subject","body","fromMail","ToData","toMail","createUsers","window","localStorage","getItem","setItem","JSON","stringify","createMessages","createToBox","theme","createMuiTheme","palette","primary","main","secondary","Input","props","console","log","useEffect","className","TextField","CustomButton","Button","type","verifyUserEmailAndPassword","dbData","parse","Object","keys","includes","Login","useState","isError","value","error","setError","formElements","action","onSubmit","e","preventDefault","formData","map","formField","document","getElementById","result","inputData","postLogin","handleLogin","id","required","name","autoFocus","label","color","variant","fullWidth","size","Header","onClick","querySelector","classList","toggle","placeholder","Menu","ExtrasSideMenu","MailBox","class","Dashboard","App","initialData","isLogin","accessToken","loginState","setLoginState","mail","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a3c41963.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","let UsersData = {\n    \"sravan@email.com\":{ email:\"sravan@email.com\", password : \"1234\", fullName : \"sravan\"},\n    \"bala@email.com\": {email:\"bala@email.com\", password : \"1234\", fullName : \"bala\"},\n    \"vishnu@email.com\":{email:\"vishnu@email.com\", password : \"1234\", fullName : \"vishnu\"},\n    \"naidu@email.com\":{email:\"naidu@email.com\", password : \"1234\", fullName : \"naidu\"}    \n}\nlet id1 =(Math.random()*8).toString(16).replace(\".\",\"\") ;\nlet id2 =(Math.random()*8).toString(16).replace(\".\",\"\") ;\nlet MessagesData = {\n    [id1]: { mid:id1 , date: new Date().toGMTString(), subject : \"hello\", body: \"hi sravan from bala\", fromMail : \"bala@email.com\"},\n    [id2]: {mid: id2,date: new Date().toGMTString(), subject : \"hi\",body: \"hi sravan, bala from sravan\", fromMail : \"sravan@email.com\"},\n}\nlet ToData = [\n    { mid: id1,toMail : \"sravan@email.com\"},\n    {mid: id2, toMail : \"sravan@email.com\"},\n    {mid: id2, toMail : \"bala@email.com\"},\n];\n\nexport const createUsers=() => \n{\n    if(!window.localStorage.getItem(\"users\")){\n        window.localStorage.setItem(\"users\",JSON.stringify(UsersData));\n    }\n}\n\nexport const createMessages=()=>{\n    if(!window.localStorage.getItem(\"mesages\")){\n        window.localStorage.setItem(\"messages\",JSON.stringify(MessagesData));\n    }\n}\n\nexport const createToBox= ()=>{\n    if(!window.localStorage.getItem(\"toMails\")){\n        window.localStorage.setItem(\"toMails\",JSON.stringify(ToData));\n    }\n}","import React, {UseState, useCallback, useEffect} from 'react';\nimport {MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\n// import {MDCTextField }from '@material-ui/textfield';\n// import {MDCTextField} from '@material/textfield';\nimport { FormControlLabel, TextField, Box } from '@material-ui/core';\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#1b5e20',\n          },\n          secondary: {\n            main: '#4caf50',\n          },\n    },\n  });\n\nfunction Input({...props}){\n    // const primary = \"#1b5e20\"; // #F44336\n    // const secondary = \"#4caf50\"\n    console.log(props)\n    useEffect(()=>{\n        // const textField = new MDCTextField(document.querySelector('.mdc-text-field__input'));\n    },[])\n    // const textField = new MDCTextField()\n    return (\n        <div className=\"loginControls\">\n            <MuiThemeProvider theme={theme} >\n                <TextField  {...props}   />\n            </MuiThemeProvider>\n        </div>\n    ) ;\n};\n\nexport default Input;\n","import React, {useState} from \"react\";\nimport { Button } from '@material-ui/core';\n\nfunction CustomButton(props){\n    console.log({...props})\n    return(\n        <div className=\"loginControls\">\n            <Button {...props}>{props.type}</Button>\n        </div>\n    );\n}\n\nexport default CustomButton;","\n\nconst getDbData = (type)=> {\n    const dbData = JSON.parse(window.localStorage.getItem(type));\n    return dbData;\n}\n\nconst verifyUserEmailAndPassword = (email, password) => {\n        let dbData = getDbData(\"users\");\n        if(Object.keys(dbData).includes(email)){\n            let user = dbData[email];\n            if(user.password===password){\n                return true;\n            }\n            else{\n                return false;\n            }\n        }\n        else {\n            return false;\n        }\n}\n\nexport const postLogin = (inputData)=>{\n    const {email,password} = inputData;\n    const outputData = {};\n    if(verifyUserEmailAndPassword(email,password)){\n\n            return {isError:false,value:email}\n    }\n    else {\n        return {isError:true,value:\"no user exists\"}\n    }\n}\n\n","import React, {useState, useEffect} from 'react'\nimport {createUsers, createMessages, createToBox} from './localStorage'; \nimport Input from \"./Input\";\nimport CustomButton from \"./CustomButton\";\nimport {MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport {postLogin} from \"./API\"\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#1b5e20',\n          },\n          secondary: {\n            main: '#4caf50',\n          },\n    },\n  });\nconst createDb= ()=>{\n    if(!window.indexedDB){\n        console.error(\"browser is not supported\")\n    }\n    else {\n        createUsers();\n        createMessages()\n        createToBox();\n        console.log(\"all success\")\n    }\n}\n\nfunction Login(props){\n    const [error,setError] = useState({isError:false, value:\"\"})\n    if(!window.localStorage.getItem(\"dataCreated\")){\n        createUsers();\n        createMessages()\n        createToBox();\n    }\n    const formElements = [\"email\", \"password\"]\n    const handleSubmit = (e)=>{\n                e.preventDefault();\n                let formData = {};\n                formElements.map((value)=>{\n                    let formField = document.getElementById(\"login-\"+value)\n                    formData[value]=formField.value;\n                })\n            console.log(formData);\n           const result = postLogin(formData);\n           if(result.isError==true){\n               setError(result);\n           }\n           else {\n               props.handleLogin(result);\n           }\n\n    } \n    return (\n        <div className=\"App-login\"> \n            <form  action='none' onSubmit={handleSubmit}> \n                <MuiThemeProvider theme={theme}>\n                 <div className=\"login-header\">Sign In</div>\n                 {\n                     formElements.map((value)=>{\n                      return  <Input id={\"login-\"+value}  required={true} type={value} name={value} autoFocus={value==\"email\"?true:false} label={value} color={\"primary\"} variant=\"outlined\"  fullWidth={true} />   \n                     })\n                 }\n                {/* <Input  required={true} type=\"email\" name=\"email\" autoFocus={true} label=\"Email\" color=\"primary\" fullWidth={true} />\n                <Input required={true} type=\"password\" name=\"password\" label=\"Password\" color=\"primary\" fullWidth={true}  /> */}\n                <CustomButton variant=\"outlined\" color=\"secondary\" size=\"medium\" variant=\"contained\" fullWidth={true} type=\"submit\" value=\"Sign In\" className=\"custom-button\" />\n                  {error.isError?<div className=\"login-error\"> {error.value} </div> : null }\n                </MuiThemeProvider>\n           \n            </form>   \n        </div>\n    );\n\n};\n\nexport default Login;","import React, {useState} from \"react\";\nimport Input from \"./Input\"\n// import MenuIcon from \"@material-ui/icons/Menu\"\n// import './Header.css';\n// import './App.css';\n\nfunction Header(props){\n    const toggleExtraMenu =()=>{\n        document.querySelector(\".app-bar\").classList.toggle(\"app-bar-shrink\");\n        document.querySelector(\".extras-side-menu\").classList.toggle(\"side-menu-push\")\n        document.querySelector(\".app-content\").classList.toggle(\"app-content-shrink\")\n\n    }\n    return (\n        <div className=\"app-bar\">\n            \n            <div className=\"menu-icon\" onClick={toggleExtraMenu}>  </div>\n            <div className=\"app-search\"> \n                <input id=\"menuIcon\" type=\"text\" name=\"text\" placeholder=\"Search\"/>\n            </div>\n            <div className=\"inbox-count\"> </div>\n            <div className=\"notification\"> </div>\n            <div className=\"app-logout\"> </div>\n\n\n        </div>\n    )\n}\n\nexport default Header;","import React,{useState} from \"react\";\n\nfunction Menu(props){\n    return (\n        <div  className=\"menu\"> \n            <div  className=\"menu-content\"> \n                <button className=\"mail-compose-button\" onClick> Componse Mail</button>\n                <div className=\"menu-folders\">Folders</div>\n                <div className=\"menu-categories\">Catergories</div>\n                <div className=\"menu-labels\">Labels</div>\n            </div>\n         </div>\n    )\n}\n\nexport default Menu;","import React, {useState} from 'react';\n\nfunction ExtrasSideMenu(){\n    return (\n        <div className=\"extras-side-menu\" > </div>\n    )\n}\n\nexport default ExtrasSideMenu;","import React, { useState } from 'react';\n\nfunction MailBox(props){\nreturn (\n    <div class=\"app-section\"> \n        <div className=\"mail-header\"> </div>\n        <ul className=\"mail-list\">\n            <li className=\"mail-item\"> </li>    \n        </ul>\n    </div>\n)\n}\n\nexport default MailBox;","import React, {useState, useEffect} from \"react\";\nimport Header from \"./Header\";\nimport Menu from \"./Menu\";\nimport ExtrasSideMenu from \"./ExtrasSideMenu\"\nimport MailBox from \"./MailBox\"\nfunction Dashboard(props){\n\n    return (\n        <div className=\"dashboard\">\n            <ExtrasSideMenu />\n            <Header />\n            <div className=\"app-content\">\n                <Menu />\n                <MailBox />\n            </div>\n        \n        </div>\n    )\n}\n\nexport default Dashboard;","import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Login from './Login';\nimport Dashboard from \"./Dashboard\"\n\nfunction App() {\n  let initialData = { isLogin: false, value: \"\" };\n  let accessToken = window.localStorage.getItem(\"accessToken\")\n  if (accessToken) {\n    initialData = { isLogin: true, value: accessToken };\n  }\n  const [loginState, setLoginState] = useState(initialData);\n  const handleLogin = (result) => {\n    window.localStorage.setItem(\"accessToken\", result.value)\n    console.log(result)\n    setLoginState({ isLogin: true, value: result.value })\n  }\n  return (\n    <div className=\"App\">\n      {/* <div className=\"App-header\"></div>  */}\n      {!loginState.isLogin ?\n        <Login handleLogin={handleLogin} /> :\n        <Dashboard mail={loginState.value} />\n      }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}