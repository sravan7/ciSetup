{"version":3,"sources":["logo.svg","localStorage.js","Input.js","CustomButton.js","API.js","Login.js","Header.js","Menu.js","ExtrasSideMenu.js","MailCard.js","MailBox.js","Address.js","Overlay.js","ReadAddress.js","ReadOverlay.js","Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","UsersData","email","password","fullName","id1","Math","random","toString","replace","id2","MessagesData","mid","date","Date","toGMTString","subject","body","fromMail","to","cc","unread","ToData","toMail","theme","createMuiTheme","palette","primary","main","secondary","Input","props","console","log","useEffect","className","TextField","CustomButton","Button","type","getDbData","JSON","parse","window","localStorage","getItem","writeToDb","data","setItem","stringify","postLogin","inputData","outputData","dbData","Object","keys","includes","user","verifyUserEmailAndPassword","isError","value","getMails","mailType","messagesDb","mails","userMails","values","message","push","sort","a","b","Login","useState","error","setError","formElements","action","onSubmit","e","preventDefault","formData","map","formField","document","getElementById","result","handleLogin","id","required","name","autoFocus","label","color","variant","fullWidth","size","Header","onClick","querySelector","classList","toggle","placeholder","unreadCount","handleLogout","Menu","handleCompose","mailboxType","handleMailboxType","src","inboxCount","outboxCount","ExtrasSideMenu","MailCard","content","checked","setCheckbox","key","Checkbox","onChange","stopPropagation","target","handleReadPopup","toLocaleString","MailBox","setType","setMails","updateUnread","updateUnreadCount","filter","val","length","readBy","db","updateReadList","deleteIds","deleteMails","Array","from","getElementsByName","elem","mail","MailAddress","text","index","handleRemove","onKeyUp","keyCode","test","handleAccept","Overlay","toMails","setToMails","ccMails","setCcMails","handleClose","contentEditable","bodyContent","subjectContent","mailContent","sendThisMail","ReadAddress","ReadOverlay","mailData","disabled","Dashboard","popup","setPopup","readPopup","setreadPopup","setMailData","setMailboxType","setunreadCount","userData","App","initialData","isLogin","loginState","setLoginState","removeItem","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a6d6422e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","let UsersData = {\n    \"sravan@email.com\":{ email:\"sravan@email.com\", password : \"1234\", fullName : \"sravan\"},\n    \"prem@email.com\":{email:\"prem@email.com\", password : \"1234\", fullName : \"prem\"},\n    \"bala@email.com\": {email:\"bala@email.com\", password : \"1234\", fullName : \"bala\"},\n    \"vishnu@email.com\":{email:\"vishnu@email.com\", password : \"1234\", fullName : \"vishnu\"},\n    \"naidu@email.com\":{email:\"naidu@email.com\", password : \"1234\", fullName : \"naidu\"}    \n}\nlet id1 =(Math.random()*8).toString(16).replace(\".\",\"\") ;\nlet id2 =(Math.random()*8).toString(16).replace(\".\",\"\") ;\nlet MessagesData = {\n    [id1]: { mid:id1 , date: new Date().toGMTString(), subject : \"hello\", body: \"hi sravan from bala\",fullName : \"sravan\", fromMail : \"bala@email.com\", to:[\"sravan@email.com\",\"bala@email.com\"],cc:[],unread:[\"sravan@email.com\",\"bala@email.com\"]},\n    [id2]: {mid: id2,date: new Date().toGMTString(), subject : \"hi\",body: \"hi sravan, bala from sravan\",fullName : \"sravan\", fromMail : \"sravan@email.com\", to:[\"sravan@email.com\"],cc:[], unread:[\"sravan@email.com\",\"bala@email.com\"]},\n}\nlet ToData = [\n    { mid: id1,toMail : \"sravan@email.com\"},\n    {mid: id2, toMail : \"sravan@email.com\"},\n    {mid: id2, toMail : \"bala@email.com\"},\n];\n\nexport const createUsers=() => \n{\n    if(!window.localStorage.getItem(\"users\")){\n        window.localStorage.setItem(\"users\",JSON.stringify(UsersData));\n    }\n}\n\nexport const createMessages=()=>{\n    if(!window.localStorage.getItem(\"mesages\")){\n        window.localStorage.setItem(\"messages\",JSON.stringify(MessagesData));\n    }\n}\n\nexport const createToBox= ()=>{\n    if(!window.localStorage.getItem(\"toMails\")){\n        window.localStorage.setItem(\"toMails\",JSON.stringify(ToData));\n    }\n}","import React, {UseState, useCallback, useEffect} from 'react';\nimport {MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\n// import {MDCTextField }from '@material-ui/textfield';\n// import {MDCTextField} from '@material/textfield';\nimport { FormControlLabel, TextField, Box } from '@material-ui/core';\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#00b494',\n          },\n          secondary: {\n            main: '#4caf50',\n          },\n    },\n  });\n\nfunction Input({...props}){\n    // const primary = \"#1b5e20\"; // #F44336\n    // const secondary = \"#4caf50\"\n    console.log(props)\n    useEffect(()=>{\n        // const textField = new MDCTextField(document.querySelector('.mdc-text-field__input'));\n    },[])\n    // const textField = new MDCTextField()\n    return (\n        <div className=\"loginControls\">\n            <MuiThemeProvider theme={theme} >\n                <TextField  {...props}   />\n            </MuiThemeProvider>\n        </div>\n    ) ;\n};\n\nexport default Input;\n","import React, {useState} from \"react\";\nimport { Button } from '@material-ui/core';\n\nfunction CustomButton(props){\n    console.log({...props})\n    return(\n        <div className=\"loginControls\">\n            <Button {...props}>{props.type}</Button>\n        </div>\n    );\n}\n\nexport default CustomButton;","\n\nconst getDbData = (type) => {\n    const dbData = JSON.parse(window.localStorage.getItem(type));\n    return dbData;\n}\nconst writeToDb = (type, data) => {\n    window.localStorage.setItem(type, JSON.stringify(data))\n    return true;\n}\n\nconst verifyUserEmailAndPassword = (email, password) => {\n    let dbData = getDbData(\"users\");\n    if (Object.keys(dbData).includes(email)) {\n        let user = dbData[email];\n        if (user.password === password) {\n            return user;\n        }\n        else {\n            return false;\n        }\n    }\n    else {\n        return false;\n    }\n}\n\nexport const postLogin = (inputData) => {\n    const { email, password } = inputData;\n    const outputData = verifyUserEmailAndPassword(email, password);\n    if (outputData) {\n\n        return { isError: false, value: outputData }\n    }\n    else {\n        return { isError: true, value: \"no user exists\" }\n    }\n}\nexport const sortByDate = (mails) => {\n    console.log(mails.sort((a, b) => new Date(b.date) - new Date(a.date)))\n    return mails.sort((a, b) => new Date(b.date) - new Date(a.date));\n}\nexport const getMails = (mailType, user) => {\n    let messagesDb = getDbData(\"messages\");\n    console.log(messagesDb, mailType, user)\n    let toMailDb = getDbData(\"toMails\");\n    let userMails = [];\n    if (mailType == \"inbox\") {\n        // let userMails=toMailDb.filter((data)=>data.toMail===user);\n        for (let message of Object.values(messagesDb)) {\n            console.log(message);\n            if (message.to.includes(user) || message.cc.includes(user)) {\n                userMails.push(message)\n            }\n        }\n\n    }\n    if (mailType == \"sent\") {\n        for (let message of Object.values(messagesDb)) {\n            console.log(message.fromMail, user)\n            if (message.fromMail === user) {\n                userMails.push(message)\n            }\n        }\n    }\n    console.log(userMails)\n    userMails = sortByDate(userMails);\n    return userMails;\n}\nexport const sendThisMail = (content) => {\n    let db = getDbData(\"messages\");\n    db[content[\"mid\"]] = content;\n    console.log(db)\n    writeToDb(\"messages\", db);\n    return true;\n}\nexport const updateReadList = (mid, readBy) => {\n    let db = getDbData(\"messages\")\n    let unread = db[mid].unread;\n    unread = unread.filter(val => val !== readBy);\n    db[mid].unread = unread;\n    writeToDb(\"messages\", db);\n}\nexport const deleteMails =(deleteIds)=>{\n    let db = getDbData(\"messages\")\n    for(let id of deleteIds){\n        delete db[id]\n    }\n    writeToDb(\"messages\", db);\n}","import React, {useState, useEffect} from 'react'\nimport {createUsers, createMessages, createToBox} from './localStorage'; \nimport Input from \"./Input\";\nimport CustomButton from \"./CustomButton\";\nimport {MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport {postLogin} from \"./API\"\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#00b494',\n          },\n          secondary: {\n            main: '#4caf50',\n          },\n    },\n  });\n\nfunction Login(props){\n    const [error,setError] = useState({isError:false, value:\"\"})\n    if(!window.localStorage.getItem(\"users\")){\n        createUsers();\n        createMessages()\n        createToBox();\n    }\n    const formElements = [\"email\", \"password\"]\n    const handleSubmit = (e)=>{\n                e.preventDefault();\n                let formData = {};\n                formElements.map((value)=>{\n                    let formField = document.getElementById(\"login-\"+value)\n                    formData[value]=formField.value;\n                })\n            console.log(formData);\n           const result = postLogin(formData);\n           if(result.isError==true){\n               setError(result);\n           }\n           else {\n               props.handleLogin(result);\n           }\n\n    } \n    return (\n        <div className=\"App-login\"> \n            <form  action='none' onSubmit={handleSubmit}> \n                <MuiThemeProvider theme={theme}>\n                 <div className=\"login-header\">Sign In</div>\n                 {\n                     formElements.map((value)=>{\n                      return  <Input id={\"login-\"+value}  required={true} type={value} name={value} autoFocus={value==\"email\"?true:false} label={value} color={\"primary\"} variant=\"outlined\"  fullWidth={true} />   \n                     })\n                 }\n                {/* <Input  required={true} type=\"email\" name=\"email\" autoFocus={true} label=\"Email\" color=\"primary\" fullWidth={true} />\n                <Input required={true} type=\"password\" name=\"password\" label=\"Password\" color=\"primary\" fullWidth={true}  /> */}\n                <CustomButton variant=\"outlined\" color=\"secondary\" size=\"medium\" variant=\"contained\" fullWidth={true} type=\"submit\" value=\"Sign In\" className=\"custom-button\" />\n                  {error.isError?<div className=\"login-error\"> {error.value} </div> : null }\n                </MuiThemeProvider>\n           \n            </form>   \n        </div>\n    );\n\n};\n\nexport default Login;","import React, {useState} from \"react\";\nimport Input from \"./Input\"\n// import MenuIcon from \"@material-ui/icons/Menu\"\n// import './Header.css';\n// import './App.css';\n\nfunction Header(props){\n    const toggleExtraMenu =()=>{\n        document.querySelector(\".app-bar\").classList.toggle(\"app-bar-shrink\");\n        document.querySelector(\".extras-side-menu\").classList.toggle(\"side-menu-push\")\n        document.querySelector(\".app-content\").classList.toggle(\"app-content-shrink\")\n\n    }\n    return (\n        <div className=\"app-bar\">\n            \n            <div className=\"menu-icon\" onClick={toggleExtraMenu}>  </div>\n            <div className=\"app-search\"> \n                <input id=\"menuIcon\" type=\"text\" name=\"text\" placeholder=\"Search\"/>\n            </div>\n            <div className=\"inbox-count\"> <span className=\"inbox-count-num\"> {props.unreadCount} </span></div>\n            <div className=\"notification\"> </div>\n            <div className=\"app-logout\" onClick={props.handleLogout}> </div>\n\n\n        </div>\n    )\n}\n\nexport default Header;","import React,{useState} from \"react\";\n\nfunction Menu(props){\n    console.log(props)\n    return (\n        <div  className=\"menu\"> \n            <div  className=\"menu-content\"> \n                <button className=\"mail-compose-button\" onClick={props.handleCompose}> Compose Mail</button>\n                <div className=\"menu-folders\">\n                    Folders\n                    <div className={props.mailboxType===\"inbox\"?\"menu-inbox active\":\"menu-inbox\"} onClick={()=>{props.handleMailboxType(\"inbox\")}}> \n                        <span className=\"inbox-text\"><img src=\"/inbox-24px.svg\" /> Inbox </span>\n                        <span className=\"menu-inbox-count\">{props.inboxCount}</span> \n                    </div>\n                    <div className={props.mailboxType===\"sent\"?\"menu-inbox active\":\"menu-inbox\"} onClick={()=>{props.handleMailboxType(\"sent\")}} > \n                        <span className=\"inbox-text\"> <img src=\"/mail-24px.svg\" /> Outbox</span>\n                        <span className=\"menu-inbox-count\">{props.outboxCount}</span> \n                    </div>\n                </div>\n                <div className=\"menu-categories\">Catergories</div>\n                <div className=\"menu-labels\">Labels</div>\n            </div>\n         </div>\n    )\n}\n\nexport default Menu;","import React, {useState} from 'react';\n\nfunction ExtrasSideMenu(){\n    return (\n        <div className=\"extras-side-menu\" > </div>\n    )\n}\n\nexport default ExtrasSideMenu;","import React, {useState} from \"react\";\nimport Checkbox from '@material-ui/core/Checkbox';\nimport {MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport {postLogin} from \"./API\"\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#00b494',\n          },\n          secondary: {\n            main: '#4caf50',\n          },\n    },\n  });\nfunction MailCard(props){\n    let {content} = props;\n    const [checked, setCheckbox]=useState(false);\n    const handleChange = (e)=>{\n    if(e.stopPropagation)e.stopPropagation();\n    console.log(e.target.checked)\n    setCheckbox(!checked)\n  } \n  \n    return (\n    <li className=\"mail-item\" id={props.content.unread.includes(props.user)&&props.type===\"inbox\"?\"unreadMail\":\"\"} key={content.mid} >\n      <MuiThemeProvider theme={theme}>  <Checkbox type=\"checkbox\" className=\"mail-item-checkbox\" name=\"delete\" checked={checked} onChange={handleChange}  size=\"small\" value={content.mid} color=\"primary\" /> </MuiThemeProvider> \n      <div className=\"mail-item-group\" onClick={(e)=>{props.handleReadPopup(props.content);}}>\n        <div className=\"mail-item-fname\"> {content.fullName} </div>\n        <div className=\"mail-item-subject\"> {content.subject} </div>\n        <div className=\"mail-item-date\"> { new Date(content.date).toLocaleString()} </div>\n      </div>\n     </li>  \n    )\n}\n\n\nexport default MailCard;","import React, { useState } from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport MailCard from \"./MailCard\";\nimport {getMails,deleteMails,updateReadList} from \"./API\"\nfunction MailBox(props){\n    const [type, setType]=useState(\"inbox\")\n    const [mails,setMails] = useState(getMails(type, props.user));\n    const updateUnread = ()=>{\n        props.updateUnreadCount(mails.filter(val=>val.unread.includes(props.user)).length)\n    }\n    updateUnread();\n    if(type!==props.type){\n        setMails(getMails(props.type, props.user))\n        updateUnread()\n        setType(props.type)\n    }\n    const unread = [];\n    const handleReadPopup = (data)=>{\n        if(data){\n            if(data.unread.includes(props.user)){\n                updateReadList(data.mid,props.user)\n                console.log(\"soudnot\")\n                setMails(getMails(props.type, props.user))\n                updateUnread()\n            }\n        }\n        props.handleReadPopup(data)\n    }\n    const handleDelete =()=>{\n        let deleteIds = Array.from(document.getElementsByName(\"delete\")).filter(elem=>elem.checked).map(elem=>elem.value)\n        deleteMails(deleteIds);\n        setMails(getMails(props.type, props.user))\n        updateUnread()\n\n    }\n\nreturn (\n    <div className=\"app-section\"> \n        <div className=\"mail-header\"> \n                <div className=\"mail-header-helper\"> \n                    <div className=\"read-count\">{props.type}({mails.length})</div>\n                    <div className=\"inbox-search\">\n                        <input className=\"search-field\" />\n                        <button className=\"search-button\">Search</button>\n                    </div>\n                </div>\n                <div className=\"mail-header-tools\"> \n                    <div className=\"mail-header-tool-section mail-header-tool\"> \n                        <img src=\"/sync-24px.svg\" className=\"mail-header-tool-refresh\" /> \n                        <img src=\"/remove_red_eye-24px.svg\" className=\"mail-header-tool-eye\" />\n                        <img src=\"/warning-24px.svg\" className=\"mail-header-tool-warning\" />\n                        <img src=\"/delete-24px.svg\" className=\"mail-header-tool-delete\" onClick={handleDelete} /> \n                     </div>\n                    <div className=\"mail-header-tool-nav mail-header-tool\"> \n                        <img src=\"/arrow_back-24px.svg\" className=\"mail-header-tool-back\" /> \n                        <img  src=\"/arrow_back-24px.svg\" className=\"mail-header-tool-fwd\"/> \n                    </div>\n                </div>\n\n        </div>\n        <ul className=\"mail-list\">\n                    {\n                        mails?\n                        mails.map((mail)=>{\n                            return (<MailCard key={mail.mid} user={props.user} type={props.type} content={mail} handleReadPopup={handleReadPopup} />) \n                        }):<div>ohoo this space is empty </div>\n                    }\n        </ul>\n    </div>\n)\n}\n\nexport default MailBox;","import React, { useState } from \"react\";\n\n\n\nfunction MailAddress(props) {\n    const [text,setText] = useState();\n    const handleKeys=(e)=>{\n        if(e.keyCode===13 || e.keyCode===188){\n            console.log(e.target.value, e.target.value)\n            let mail =e.target.value.replace(/\\s|,/gi,\"\");\n            if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(mail)){\n                props.handleAccept(props.type,mail)\n            }\n            e.target.value=\"\"\n        }\n        else{\n            console.log(e.target.value)\n            // setText(e.target.value)\n        }\n        \n    }\n    return (\n        \n        <div className=\"popup-to-wrapper\" >\n            <div className=\"role-section\">{props.type}:</div>\n            <div className=\"popup-to\">\n                {\n                    props.mails.map((val, index) => {\n                        return <span className=\"to-accepted\">\n                            <span className=\"mail-text\">{val}</span>\n                            <img src=\"/close-24px.svg\" className=\"removeIt\" onClick={() => { props.handleRemove(props.type,val) }} />\n                        </span>\n                    })\n                }\n                <input id=\"to\" className=\"textarea-to\" onKeyUp={handleKeys} value={text} />\n            </div>\n        </div>\n    )\n}\nexport default MailAddress;","import React, { useState } from \"react\";\nimport MailAddress from \"./Address\"\nimport {sendThisMail} from \"./API\"\nfunction Overlay(props) {\n    const [toMails, setToMails] = useState([])\n    const [ccMails, setCcMails] = useState([]);\n    const [subject, setSubject]=useState();\n    const [body,setBody] = useState();\n    const handleClose = (e) => {\n        if(e){\n            e.preventDefault();\n            e.stopPropagation();\n        }\n        props.handleClose();\n    }\n    const handleSend = ()=>{\n        if(toMails.length){\n        let bodyContent = document.querySelector(\"#popup-body\").value;\n        let subjectContent = document.querySelector(\"#popup-subject\").value;\n        let mid =(Math.random()*8).toString(16).replace(\".\",\"\") ;\n        let mailContent ={ mid:mid, date: new Date().toGMTString(), subject : subjectContent, body: bodyContent,fullName : props.fullName, fromMail : props.user, to: toMails,cc:ccMails,unread:[...toMails,...ccMails]}\n        console.log(mailContent)\n        if(sendThisMail(mailContent)){\n            handleClose();\n        }\n    }\n        \n\n}\n   \n    const handleRemove = (type, mail) => {\n        console.log(type, mail)\n        if (type === \"to\") {\n            setToMails(toMails.filter(val => val !== mail));\n        }\n        if (type === \"cc\") {\n            setCcMails(ccMails.filter(val => val !== mail));\n        }\n    }\n    const handleAccept = (type, mail) => {\n        if (type === \"to\") {\n            console.log(mail)\n            setToMails([...toMails, mail])\n        }\n        if (type === \"cc\") {\n            setCcMails([...ccMails, mail])\n        }\n    }\n    return (\n        <div className=\"app-overlay\" onClick={handleClose}>\n            <div className=\"overlay-content\">\n                <div className=\"popup-box\" onClick={(e) => { e.stopPropagation(); }}>\n                    {\n                        props.type === \"inbox\" ?\n                            <div className=\"popup-from\">\n                                From<div className=\"from\" contentEditable>\n                                </div >\n                            </div> : null\n                    }\n                    <MailAddress type=\"to\" handleRemove={handleRemove} handleAccept={handleAccept} mails={toMails} />\n                    <MailAddress type=\"cc\" handleRemove={handleRemove} handleAccept={handleAccept} mails={ccMails} />\n\n                    <div className=\"popup-to-wrapper\" >\n                        <div className=\"role-section\">sub:</div>\n                        <div className=\"popup-to\">\n                            <input id=\"popup-subject\" className=\"textarea-to\" value={subject} />\n                        </div>\n                    </div>\n                    <div className=\"popup-body\" id=\"body-wrapper\">\n                    <textarea id=\"popup-body\" className=\"textarea-to\" value={body} > </textarea>\n\n                    </div>\n                    <div className=\"popup-handle\">\n                        <button className=\"close\" onClick={handleClose}>Close</button>\n                        <button className=\"send\" onClick={handleSend}>Send</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Overlay;","import React, { useState } from \"react\";\n\n\n\nfunction ReadAddress(props) {\n    const [text,setText] = useState();\n    const handleKeys=(e)=>{\n        if(e.keyCode===13 || e.keyCode===188){\n            console.log(e.target.value, e.target.value)\n            let mail =e.target.value.replace(/\\s|,/gi,\"\");\n            if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(mail)){\n                props.handleAccept(props.type,mail)\n            }\n            e.target.value=\"\"\n        }\n        else{\n            console.log(e.target.value)\n            // setText(e.target.value)\n        }\n        \n    }\n    return (\n        \n        <div className=\"popup-to-wrapper\" >\n            <div className=\"role-section\">{props.type}:</div>\n            <div className=\"popup-from\">\n                {\n                    props.mails.map((val, index) => {\n                        return <span className=\"to-accepted\">\n                            <span className=\"mail-text\">{val}</span>\n                            {/* <img src=\"/close-24px.svg\" className=\"removeIt\" onClick={() => { props.handleRemove(props.type,val) }} /> */}\n                        </span>\n                    })\n                }\n                {/* <input id=\"to\" className=\"textarea-to\" onKeyUp={handleKeys} value={text} /> */}\n            </div>\n        </div>\n    )\n}\nexport default ReadAddress;","import React, { useState } from \"react\";\nimport MailAddress from \"./Address\"\nimport ReadAddress from \"./ReadAddress\";\nimport {sendThisMail} from \"./API\"\nfunction ReadOverlay(props) {\n    console.log(props)\n    const [toMails, setToMails] = useState(props.mailData.to)\n    const [ccMails, setCcMails] = useState(props.mailData.cc);\n    const [subject, setSubject]=useState(props.mailData.subject);\n    const [body,setBody] = useState(props.mailData.body);\n    const [fromMail, setFromMail]=useState([props.mailData.fromMail]);\n    const handleClose = (e) => {\n        if(e){\n            e.preventDefault();\n            e.stopPropagation();\n        }\n        props.handleClose();\n    }\n    return (\n        <div className=\"app-overlay\" onClick={handleClose}>\n            <div className=\"overlay-content\">\n                <div className=\"popup-box\" onClick={(e) => { e.stopPropagation(); }}>\n                    <ReadAddress type=\"from\"  mails={fromMail} />\n                    <ReadAddress type=\"to\" mails={toMails} />\n                    <ReadAddress type=\"cc\"   mails={ccMails} />\n\n                    <div className=\"popup-to-wrapper\" >\n                        <div className=\"role-section\">sub:</div>\n                        <div className=\"popup-from\">\n                            <input disabled id=\"popup-subject\" className=\"textarea-to\" value={subject} />\n                        </div>\n                    </div>\n                    <div className=\"popup-body\" id=\"body-wrapper\">\n                    <textarea disabled id=\"popup-body\" className=\"textarea-to\" value={body} > </textarea>\n\n                    </div>\n                    <div className=\"popup-from-handle\">\n                        <button className=\"close\" onClick={handleClose}>Close</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ReadOverlay;","import React, {useState, useEffect} from \"react\";\nimport Header from \"./Header\";\nimport Menu from \"./Menu\";\nimport ExtrasSideMenu from \"./ExtrasSideMenu\"\nimport MailBox from \"./MailBox\"\nimport Overlay from \"./Overlay\";\nimport ReadOverlay from \"./ReadOverlay\";\nfunction Dashboard(props){\n    const [popup, setPopup] =useState(false);\n    const [readPopup,setreadPopup] = useState(false);\n    const [mailData,setMailData]=useState({});\n    const [mailboxType,setMailboxType]=useState(\"inbox\");\n    const [unreadCount,setunreadCount]=useState(0);\n    const handleReadPopup = (data)=>{\n        console.log(data)\n        if(data)\n            setMailData(data)\n        console.log(mailData)\n        setreadPopup(!readPopup)\n    }\n    const handleCompose = ()=>{\n        setPopup(!popup)\n    }\n    const handleMailboxType=(data)=>{\n        if(data!==mailboxType){\n            setMailboxType(data);\n        }\n    }\n    const updateUnreadCount = (val)=>{\n        setunreadCount(val)\n    };\n    return (\n        <div className=\"dashboard\">\n            <ExtrasSideMenu />\n            <Header handleLogout={props.handleLogout} unreadCount={unreadCount} />\n            <div className=\"app-content\">\n                <Menu handleCompose={handleCompose} mailboxType={mailboxType} handleMailboxType={handleMailboxType} inboxCount={0} outboxCount={0} />\n                <MailBox updateUnreadCount={updateUnreadCount} handleReadPopup={handleReadPopup} type={mailboxType} user={props.userData.email} />\n            </div>\n            {\n              popup?<Overlay type={\"compose\"} handleClose={handleCompose} fullName={props.userData.fullName} user={props.userData.email} />:null\n            }\n            {\n                readPopup?<ReadOverlay type={mailboxType} handleClose={handleReadPopup} mailData={mailData} />:null\n            }\n        </div>\n    )\n}\n\nexport default Dashboard;","import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Login from './Login';\nimport Dashboard from \"./Dashboard\"\n\nfunction App() {\n  let initialData = { isLogin: false, value: \"\" };\n  let accessToken = window.localStorage.getItem(\"accessToken\");\n  if (accessToken) {\n    initialData = { isLogin: true, value: JSON.parse(window.localStorage.getItem(\"currentUser\")) };\n  }\n  const [loginState, setLoginState] = useState(initialData);\n  const handleLogin = (result) => {\n    window.localStorage.setItem(\"accessToken\", result.value.email)\n    window.localStorage.setItem(\"currentUser\", JSON.stringify(result.value));\n    console.log(result)\n    setLoginState({ isLogin: true, value: result.value })\n  }\n  const handleLogout = ()=>{\n    window.localStorage.removeItem(\"accessToken\");\n    window.localStorage.removeItem(\"currentUser\");\n    setLoginState({ isLogin: false, value: \"\"})\n\n  }\n  return (\n    <div className=\"App\">\n      {/* <div className=\"App-header\"></div>  */}\n      {!loginState.isLogin ?\n        <Login handleLogin={handleLogin} /> :\n        <Dashboard handleLogout={handleLogout}  userData={loginState.value} />\n      }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}