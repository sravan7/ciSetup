{"version":3,"sources":["logo.svg","localStorage.js","Input.js","CustomButton.js","API.js","Login.js","Header.js","Menu.js","ExtrasSideMenu.js","MailCard.js","MailBox.js","Address.js","Overlay.js","ReadAddress.js","ReadOverlay.js","Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","UsersData","email","password","fullName","id1","Math","random","toString","replace","id2","MessagesData","mid","date","Date","toGMTString","subject","body","fromMail","to","cc","unread","ToData","toMail","theme","createMuiTheme","palette","primary","main","secondary","Input","props","console","log","useEffect","className","TextField","CustomButton","Button","type","getDbData","JSON","parse","window","localStorage","getItem","writeToDb","data","setItem","stringify","postLogin","inputData","outputData","dbData","Object","keys","includes","user","verifyUserEmailAndPassword","isError","value","getMails","mailType","messagesDb","mails","userMails","values","message","push","sort","a","b","Login","useState","error","setError","formElements","action","onSubmit","e","preventDefault","formData","map","formField","document","getElementById","result","handleLogin","id","required","name","autoFocus","label","color","variant","fullWidth","size","Header","onClick","querySelector","classList","toggle","placeholder","handleLogout","Menu","handleCompose","ExtrasSideMenu","MailCard","content","key","handleReadPopup","Checkbox","checked","toLocaleString","MailBox","setMails","readBy","db","filter","val","updateReadList","length","src","mail","MailAddress","text","index","handleRemove","onKeyUp","keyCode","target","test","handleAccept","Overlay","toMails","setToMails","ccMails","setCcMails","handleClose","stopPropagation","contentEditable","bodyContent","subjectContent","mailContent","sendThisMail","ReadAddress","ReadOverlay","mailData","disabled","Dashboard","popup","setPopup","readPopup","setreadPopup","setMailData","userData","App","initialData","isLogin","loginState","setLoginState","removeItem","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2IAAAA,EAAOC,QAAU,IAA0B,kC,wICAvCC,EAAY,CACZ,mBAAmB,CAAEC,MAAM,mBAAoBC,SAAW,OAAQC,SAAW,UAC7E,iBAAkB,CAACF,MAAM,iBAAkBC,SAAW,OAAQC,SAAW,QACzE,mBAAmB,CAACF,MAAM,mBAAoBC,SAAW,OAAQC,SAAW,UAC5E,kBAAkB,CAACF,MAAM,kBAAmBC,SAAW,OAAQC,SAAW,UAE1EC,GAAoB,EAAdC,KAAKC,UAAYC,SAAS,IAAIC,QAAQ,IAAI,IAChDC,GAAoB,EAAdJ,KAAKC,UAAYC,SAAS,IAAIC,QAAQ,IAAI,IAChDE,GAAY,mBACXN,EAAM,CAAEO,IAAIP,EAAMQ,MAAM,IAAIC,MAAOC,cAAeC,QAAU,QAASC,KAAM,sBAAsBb,SAAW,SAAUc,SAAW,iBAAkBC,GAAG,CAAC,mBAAmB,kBAAkBC,GAAG,GAAGC,OAAO,CAAC,mBAAmB,oBADlN,cAEXX,EAAM,CAACE,IAAKF,EAAIG,MAAM,IAAIC,MAAOC,cAAeC,QAAU,KAAKC,KAAM,8BAA8Bb,SAAW,SAAUc,SAAW,mBAAoBC,GAAG,CAAC,oBAAoBC,GAAG,GAAIC,OAAO,CAAC,mBAAmB,oBAFtM,GAIZC,EAAS,CACT,CAAEV,IAAKP,EAAIkB,OAAS,oBACpB,CAACX,IAAKF,EAAKa,OAAS,oBACpB,CAACX,IAAKF,EAAKa,OAAS,mB,wBCTlBC,EAAQC,YAAe,CACzBC,QAAS,CACLC,QAAS,CACLC,KAAM,WAERC,UAAW,CACTD,KAAM,cAsBHE,MAjBf,YAA2B,IAARC,EAAO,oBAQtB,OALAC,QAAQC,IAAIF,GACZG,qBAAU,cAER,IAGE,yBAAKC,UAAU,iBACX,kBAAC,IAAD,CAAkBX,MAAOA,GACrB,kBAACY,EAAA,EAAeL,M,gBChBjBM,MATf,SAAsBN,GAElB,OADAC,QAAQC,IAAR,eAAgBF,IAEZ,yBAAKI,UAAU,iBACX,kBAACG,EAAA,EAAWP,EAAQA,EAAMQ,QCLhCC,EAAY,SAACD,GAEf,OADeE,KAAKC,MAAMC,OAAOC,aAAaC,QAAQN,KAGpDO,EAAW,SAACP,EAAKQ,GAEnB,OADAJ,OAAOC,aAAaI,QAAQT,EAAME,KAAKQ,UAAUF,KAC1C,GAmBEG,EAAY,SAACC,GAAa,IAE7BC,EAlByB,SAAClD,EAAOC,GACnC,IAAIkD,EAASb,EAAU,SACvB,GAAGc,OAAOC,KAAKF,GAAQG,SAAStD,GAAO,CACnC,IAAIuD,EAAOJ,EAAOnD,GAClB,OAAGuD,EAAKtD,WAAWA,GACRsD,EAOX,OAAO,EAMIC,CADMP,EAAlBjD,MAAkBiD,EAAZhD,UAEb,OAAGiD,EAEY,CAACO,SAAQ,EAAMC,MAAMR,GAGzB,CAACO,SAAQ,EAAKC,MAAM,mBAOtBC,EAAS,SAACC,EAAUL,GAC7B,IAAIM,EAAavB,EAAU,YAC3BR,QAAQC,IAAI8B,GACGvB,EAAU,WAAzB,IAPuBwB,EAQnBC,EAAU,GACd,GAAa,SAAVH,EAEC,cAAqBR,OAAOY,OAAOH,GAAnC,eAA+C,CAAzC,IAAII,EAAO,KACbnC,QAAQC,IAAIkC,IACTA,EAAQhD,GAAGqC,SAASC,IAASU,EAAQ/C,GAAGoC,SAASC,KAChDQ,EAAUG,KAAKD,GAK3B,GAAa,QAAVL,EACC,cAAqBR,OAAOY,OAAOH,GAAnC,eAA+C,CAAzC,IAAII,EAAO,KACVA,EAAQjD,SAASsC,SAASC,IACzBQ,EAAUG,KAAKD,GAK3B,OA3BuBH,EA0BAC,EAzBvBjC,QAAQC,IAAK+B,EAAMK,MAAK,SAACC,EAAEC,GAAH,OAAO,IAAIzD,KAAKyD,EAAE1D,MAAM,IAAIC,KAAKwD,EAAEzD,UAyB3DoD,EAxBOD,EAAMK,MAAK,SAACC,EAAEC,GAAH,OAAO,IAAIzD,KAAKyD,EAAE1D,MAAM,IAAIC,KAAKwD,EAAEzD,UClCnDW,EAAQC,YAAe,CACzBC,QAAS,CACLC,QAAS,CACLC,KAAM,WAERC,UAAW,CACTD,KAAM,cAoDH4C,MA/Cf,SAAezC,GAAO,IAAD,IACQ0C,mBAAS,CAACd,SAAQ,EAAOC,MAAM,KADvC,mBACVc,EADU,KACJC,EADI,KAEbhC,OAAOC,aAAaC,QAAQ,WJC5BF,OAAOC,aAAaC,QAAQ,UAC5BF,OAAOC,aAAaI,QAAQ,QAAQP,KAAKQ,UAAUhD,IAKnD0C,OAAOC,aAAaC,QAAQ,YAC5BF,OAAOC,aAAaI,QAAQ,WAAWP,KAAKQ,UAAUtC,IAKtDgC,OAAOC,aAAaC,QAAQ,YAC5BF,OAAOC,aAAaI,QAAQ,UAAUP,KAAKQ,UAAU3B,KITzD,IAAMsD,EAAe,CAAC,QAAS,YAkB/B,OACI,yBAAKzC,UAAU,aACX,0BAAO0C,OAAO,OAAOC,SAnBR,SAACC,GACVA,EAAEC,iBACF,IAAIC,EAAW,GACfL,EAAaM,KAAI,SAACtB,GACd,IAAIuB,EAAYC,SAASC,eAAe,SAASzB,GACjDqB,EAASrB,GAAOuB,EAAUvB,SAElC5B,QAAQC,IAAIgD,GACb,IAAMK,EAASpC,EAAU+B,GACN,GAAhBK,EAAO3B,QACNgB,EAASW,GAGTvD,EAAMwD,YAAYD,KAOjB,kBAAC,IAAD,CAAkB9D,MAAOA,GACxB,yBAAKW,UAAU,gBAAf,WAEIyC,EAAaM,KAAI,SAACtB,GACjB,OAAQ,kBAAC,EAAD,CAAO4B,GAAI,SAAS5B,EAAQ6B,UAAU,EAAMlD,KAAMqB,EAAO8B,KAAM9B,EAAO+B,UAAkB,SAAP/B,EAA2BgC,MAAOhC,EAAOiC,MAAO,UAAWC,QAAQ,WAAYC,WAAW,OAKzL,kBAAC,GAAD,GAAcD,QAAQ,WAAWD,MAAM,YAAYG,KAAK,UAAxD,wBAAyE,aAAzE,2BAAgG,GAAhG,qBAA2G,UAA3G,sBAA0H,WAA1H,0BAA8I,iBAA9I,IACGtB,EAAMf,QAAQ,yBAAKxB,UAAU,eAAf,IAA+BuC,EAAMd,MAArC,KAAqD,SC1BvEqC,MAvBf,SAAgBlE,GAOZ,OACI,yBAAKI,UAAU,WAEX,yBAAKA,UAAU,YAAY+D,QATZ,WACnBd,SAASe,cAAc,YAAYC,UAAUC,OAAO,kBACpDjB,SAASe,cAAc,qBAAqBC,UAAUC,OAAO,kBAC7DjB,SAASe,cAAc,gBAAgBC,UAAUC,OAAO,wBAMpD,MACA,yBAAKlE,UAAU,cACX,2BAAOqD,GAAG,WAAWjD,KAAK,OAAOmD,KAAK,OAAOY,YAAY,YAE7D,yBAAKnE,UAAU,eAAf,KACA,yBAAKA,UAAU,gBAAf,KACA,yBAAKA,UAAU,aAAa+D,QAASnE,EAAMwE,cAA3C,OCPGC,MAbf,SAAczE,GACV,OACI,yBAAMI,UAAU,QACZ,yBAAMA,UAAU,gBACZ,4BAAQA,UAAU,sBAAsB+D,QAASnE,EAAM0E,eAAvD,iBACA,yBAAKtE,UAAU,gBAAf,WACA,yBAAKA,UAAU,mBAAf,eACA,yBAAKA,UAAU,eAAf,aCDDuE,MANf,WACI,OACI,yBAAKvE,UAAU,oBAAf,M,QCAFX,EAAQC,YAAe,CACzBC,QAAS,CACLC,QAAS,CACLC,KAAM,WAERC,UAAW,CACTD,KAAM,cAkBH+E,MAdf,SAAkB5E,GAAO,IAChB6E,EAAW7E,EAAX6E,QAEL,OADA5E,QAAQC,IAAIF,EAAO6E,GAEnB,wBAAIzE,UAAU,YAAYqD,GAAIzD,EAAM6E,QAAQvF,OAAOmC,SAASzB,EAAM0B,OAAoB,UAAb1B,EAAMQ,KAAe,aAAa,GAAIsE,IAAKD,EAAQhG,IAAKsF,QAAS,WAAKnE,EAAM+E,gBAAgB/E,EAAM6E,WACzK,kBAAC,IAAD,CAAkBpF,MAAOA,GAAzB,KAAkC,kBAACuF,EAAA,EAAD,CAAU5E,UAAU,qBAAqB6E,SAAS,EAAOhB,KAAK,QAAQpC,MAAOgD,EAAQhG,IAAKiF,MAAM,YAAlI,KACE,yBAAK1D,UAAU,mBAAf,IAAmCyE,EAAQxG,SAA3C,KACA,yBAAK+B,UAAU,qBAAf,IAAqCyE,EAAQ5F,QAA7C,KACA,yBAAKmB,UAAU,kBAAf,IAAmC,IAAIrB,KAAK8F,EAAQ/F,MAAMoG,iBAA1D,OCkCOC,MAnDf,SAAiBnF,GAAO,IAAD,EACM0C,mBAASZ,EAAS9B,EAAMQ,KAAMR,EAAM0B,OAD1C,mBACZO,EADY,KACNmD,EADM,KAGbL,EAAkB,SAAC/D,GAClBA,GACIA,EAAK1B,OAAOmC,SAASzB,EAAM0B,SNgEd,SAAC7C,EAAKwG,GAClC,IAAIC,EAAK7E,EAAU,YACfnB,EAASgG,EAAGzG,GAAKS,OACrBA,EAASA,EAAOiG,QAAO,SAAAC,GAAG,OAAEA,IAAMH,KAClCC,EAAGzG,GAAKS,OAASA,EACjByB,EAAU,WAAWuE,GMpELG,CAAezE,EAAKnC,IAAImB,EAAM0B,MAC9BzB,QAAQC,IAAI,WACZkF,EAAStD,EAAS9B,EAAMQ,KAAMR,EAAM0B,QAG5C1B,EAAM+E,gBAAgB/D,IAI9B,OACI,yBAAKZ,UAAU,eACX,yBAAKA,UAAU,eACP,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,cAAcJ,EAAMQ,KAAnC,IAjBD,GAiBkDkF,OAAjD,KACA,yBAAKtF,UAAU,gBACX,2BAAOA,UAAU,iBACjB,4BAAQA,UAAU,iBAAlB,YAGR,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,6CACX,yBAAKuF,IAAI,iBAAiBvF,UAAU,6BACpC,yBAAKuF,IAAI,2BAA2BvF,UAAU,yBAC9C,yBAAKuF,IAAI,oBAAoBvF,UAAU,6BACvC,yBAAKuF,IAAI,mBAAmBvF,UAAU,6BAE1C,yBAAKA,UAAU,yCACX,yBAAKuF,IAAI,uBAAuBvF,UAAU,0BAC1C,yBAAMuF,IAAI,uBAAuBvF,UAAU,4BAK3D,wBAAIA,UAAU,aAEE6B,EACAA,EAAMkB,KAAI,SAACyC,GACP,OAAQ,kBAAC,EAAD,CAAUd,IAAKc,EAAK/G,IAAK6C,KAAM1B,EAAM0B,KAAMlB,KAAK,QAAQqE,QAASe,EAAMb,gBAAiBA,OACjG,6D,QCVZc,MAnCf,SAAqB7F,GAAQ,IAAD,EACD0C,qBADC,mBACjBoD,EADiB,KAiBxB,OAjBwB,KAmBpB,yBAAK1F,UAAU,oBACX,yBAAKA,UAAU,gBAAgBJ,EAAMQ,KAArC,KACA,yBAAKJ,UAAU,YAEPJ,EAAMiC,MAAMkB,KAAI,SAACqC,EAAKO,GAClB,OAAO,0BAAM3F,UAAU,eACnB,0BAAMA,UAAU,aAAaoF,GAC7B,yBAAKG,IAAI,kBAAkBvF,UAAU,WAAW+D,QAAS,WAAQnE,EAAMgG,aAAahG,EAAMQ,KAAKgF,UAI3G,2BAAO/B,GAAG,KAAKrD,UAAU,cAAc6F,QA5BlC,SAACjD,GACd,GAAe,KAAZA,EAAEkD,SAA4B,MAAZlD,EAAEkD,QAAc,CACjCjG,QAAQC,IAAI8C,EAAEmD,OAAOtE,MAAOmB,EAAEmD,OAAOtE,OACrC,IAAI+D,EAAM5C,EAAEmD,OAAOtE,MAAMnD,QAAQ,SAAS,IACtC,gDAAgD0H,KAAKR,IACrD5F,EAAMqG,aAAarG,EAAMQ,KAAKoF,GAElC5C,EAAEmD,OAAOtE,MAAM,QAGf5B,QAAQC,IAAI8C,EAAEmD,OAAOtE,QAkB2CA,MAAOiE,OCgDpEQ,MA/Ef,SAAiBtG,GAAQ,IAAD,EACU0C,mBAAS,IADnB,mBACb6D,EADa,KACJC,EADI,OAEU9D,mBAAS,IAFnB,mBAEb+D,EAFa,KAEJC,EAFI,OAGQhE,qBAHR,mBAGbzD,EAHa,aAIGyD,sBAJH,mBAIbxD,EAJa,KAKdyH,GALc,KAKA,SAAC3D,GACdA,IACCA,EAAEC,iBACFD,EAAE4D,mBAEN5G,EAAM2G,gBAiBJX,EAAe,SAACxF,EAAMoF,GACxB3F,QAAQC,IAAIM,EAAMoF,GACL,OAATpF,GACAgG,EAAWD,EAAQhB,QAAO,SAAAC,GAAG,OAAIA,IAAQI,MAEhC,OAATpF,GACAkG,EAAWD,EAAQlB,QAAO,SAAAC,GAAG,OAAIA,IAAQI,OAG3CS,EAAe,SAAC7F,EAAMoF,GACX,OAATpF,IACAP,QAAQC,IAAI0F,GACZY,EAAW,GAAD,mBAAKD,GAAL,CAAcX,MAEf,OAATpF,GACAkG,EAAW,GAAD,mBAAKD,GAAL,CAAcb,MAGhC,OACI,yBAAKxF,UAAU,cAAc+D,QAASwC,GAClC,yBAAKvG,UAAU,mBACX,yBAAKA,UAAU,YAAY+D,QAAS,SAACnB,GAAQA,EAAE4D,oBAExB,UAAf5G,EAAMQ,KACF,yBAAKJ,UAAU,cAAf,OACQ,yBAAKA,UAAU,OAAOyG,iBAAe,KAEpC,KAEjB,kBAAC,EAAD,CAAarG,KAAK,KAAKwF,aAAcA,EAAcK,aAAcA,EAAcpE,MAAOsE,IACtF,kBAAC,EAAD,CAAa/F,KAAK,KAAKwF,aAAcA,EAAcK,aAAcA,EAAcpE,MAAOwE,IAEtF,yBAAKrG,UAAU,oBACX,yBAAKA,UAAU,gBAAf,QACA,yBAAKA,UAAU,YACX,2BAAOqD,GAAG,gBAAgBrD,UAAU,cAAcyB,MAAO5C,MAGjE,yBAAKmB,UAAU,aAAaqD,GAAG,gBAC/B,8BAAUA,GAAG,aAAarD,UAAU,cAAcyB,MAAO3C,GAAzD,MAGA,yBAAKkB,UAAU,gBACX,4BAAQA,UAAU,QAAQ+D,QAASwC,GAAnC,SACA,4BAAQvG,UAAU,OAAO+D,QA3D1B,WACf,GAAGoC,EAAQb,OAAO,CAClB,IAAIoB,EAAczD,SAASe,cAAc,eAAevC,MACpDkF,EAAiB1D,SAASe,cAAc,kBAAkBvC,MAE1DmF,EAAa,CAAEnI,KADK,EAAdN,KAAKC,UAAYC,SAAS,IAAIC,QAAQ,IAAI,IACxBI,MAAM,IAAIC,MAAOC,cAAeC,QAAU8H,EAAgB7H,KAAM4H,EAAYzI,SAAW2B,EAAM3B,SAAUc,SAAWa,EAAM0B,KAAMtC,GAAImH,EAAQlH,GAAGoH,EAAQnH,OAAO,GAAD,mBAAKiH,GAAL,YAAgBE,KACvMxG,QAAQC,IAAI8G,GR8CM,SAACnC,GACvB,IAAIS,EAAK7E,EAAU,YAInB,OAHA6E,EAAGT,EAAO,KAASA,EACnB5E,QAAQC,IAAIoF,GACZvE,EAAU,WAAWuE,IACd,EQlDA2B,CAAaD,IACZL,OAmDY,aCnCTO,MAnCf,SAAqBlH,GAAQ,IAAD,EACD0C,qBADC,mBAiBxB,OAjBwB,UAmBpB,yBAAKtC,UAAU,oBACX,yBAAKA,UAAU,gBAAgBJ,EAAMQ,KAArC,KACA,yBAAKJ,UAAU,cAEPJ,EAAMiC,MAAMkB,KAAI,SAACqC,EAAKO,GAClB,OAAO,0BAAM3F,UAAU,eACnB,0BAAMA,UAAU,aAAaoF,UCgB1C2B,MAzCf,SAAqBnH,GACjBC,QAAQC,IAAIF,GADY,MAEM0C,mBAAS1C,EAAMoH,SAAShI,IAF9B,mBAEjBmH,EAFiB,aAGM7D,mBAAS1C,EAAMoH,SAAS/H,KAH9B,mBAGjBoH,EAHiB,aAII/D,mBAAS1C,EAAMoH,SAASnI,UAJ5B,mBAIjBA,EAJiB,aAKDyD,mBAAS1C,EAAMoH,SAASlI,OALvB,mBAKjBA,EALiB,aAMMwD,mBAAS,CAAC1C,EAAMoH,SAASjI,YAN/B,mBAMjBA,EANiB,KAOlBwH,GAPkB,KAOJ,SAAC3D,GACdA,IACCA,EAAEC,iBACFD,EAAE4D,mBAEN5G,EAAM2G,gBAEV,OACI,yBAAKvG,UAAU,cAAc+D,QAASwC,GAClC,yBAAKvG,UAAU,mBACX,yBAAKA,UAAU,YAAY+D,QAAS,SAACnB,GAAQA,EAAE4D,oBAC3C,kBAAC,EAAD,CAAapG,KAAK,OAAQyB,MAAO9C,IACjC,kBAAC,EAAD,CAAaqB,KAAK,KAAKyB,MAAOsE,IAC9B,kBAAC,EAAD,CAAa/F,KAAK,KAAOyB,MAAOwE,IAEhC,yBAAKrG,UAAU,oBACX,yBAAKA,UAAU,gBAAf,QACA,yBAAKA,UAAU,cACX,2BAAOiH,UAAQ,EAAC5D,GAAG,gBAAgBrD,UAAU,cAAcyB,MAAO5C,MAG1E,yBAAKmB,UAAU,aAAaqD,GAAG,gBAC/B,8BAAU4D,UAAQ,EAAC5D,GAAG,aAAarD,UAAU,cAAcyB,MAAO3C,GAAlE,MAGA,yBAAKkB,UAAU,qBACX,4BAAQA,UAAU,QAAQ+D,QAASwC,GAAnC,cCETW,MAhCf,SAAmBtH,GAAO,IAAD,EACI0C,oBAAS,GADb,mBACd6E,EADc,KACPC,EADO,OAEY9E,oBAAS,GAFrB,mBAEd+E,EAFc,KAEJC,EAFI,OAGQhF,mBAAS,IAHjB,mBAGd0E,EAHc,KAGLO,EAHK,KAIf5C,EAAkB,SAAC/D,GACrBf,QAAQC,IAAIc,GACTA,GACC2G,EAAY3G,GAChBf,QAAQC,IAAIkH,GACZM,GAAcD,IAEZ/C,EAAgB,WAClB8C,GAAUD,IAEd,OACI,yBAAKnH,UAAU,aACX,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAQoE,aAAcxE,EAAMwE,eAC5B,yBAAKpE,UAAU,eACX,kBAAC,EAAD,CAAMsE,cAAeA,IACrB,kBAAC,EAAD,CAASK,gBAAiBA,EAAiBvE,KAAK,QAAQkB,KAAM1B,EAAM4H,SAASzJ,SAG/EoJ,EAAM,kBAAC,EAAD,CAAS/G,KAAM,UAAWmG,YAAajC,EAAerG,SAAU2B,EAAM4H,SAASvJ,SAAUqD,KAAM1B,EAAM4H,SAASzJ,QAAU,KAG5HsJ,EAAU,kBAAC,EAAD,CAAajH,KAAM,QAASmG,YAAa5B,EAAiBqC,SAAUA,IAAa,OCG5FS,MA9Bf,WACE,IAAIC,EAAc,CAAEC,SAAS,EAAOlG,MAAO,IACzBjB,OAAOC,aAAaC,QAAQ,iBAE5CgH,EAAc,CAAEC,SAAS,EAAMlG,MAAOnB,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,kBAJlE,MAMuB4B,mBAASoF,GANhC,mBAMNE,EANM,KAMMC,EANN,KAmBb,OACE,yBAAK7H,UAAU,OAEX4H,EAAWD,QAEX,kBAAC,EAAD,CAAWvD,aAXI,WACnB5D,OAAOC,aAAaqH,WAAW,eAC/BtH,OAAOC,aAAaqH,WAAW,eAC/BD,EAAc,CAAEF,SAAS,EAAOlG,MAAO,MAQK+F,SAAUI,EAAWnG,QAD7D,kBAAC,EAAD,CAAO2B,YAhBO,SAACD,GACnB3C,OAAOC,aAAaI,QAAQ,cAAesC,EAAO1B,MAAM1D,OACxDyC,OAAOC,aAAaI,QAAQ,cAAeP,KAAKQ,UAAUqC,EAAO1B,QACjE5B,QAAQC,IAAIqD,GACZ0E,EAAc,CAAEF,SAAS,EAAMlG,MAAO0B,EAAO1B,aCL7BsG,QACW,cAA7BvH,OAAOwH,SAASC,UAEe,UAA7BzH,OAAOwH,SAASC,UAEhBzH,OAAOwH,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASnF,SAASC,eAAe,SD6H3C,kBAAmBmF,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.1b38961b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","let UsersData = {\n    \"sravan@email.com\":{ email:\"sravan@email.com\", password : \"1234\", fullName : \"sravan\"},\n    \"bala@email.com\": {email:\"bala@email.com\", password : \"1234\", fullName : \"bala\"},\n    \"vishnu@email.com\":{email:\"vishnu@email.com\", password : \"1234\", fullName : \"vishnu\"},\n    \"naidu@email.com\":{email:\"naidu@email.com\", password : \"1234\", fullName : \"naidu\"}    \n}\nlet id1 =(Math.random()*8).toString(16).replace(\".\",\"\") ;\nlet id2 =(Math.random()*8).toString(16).replace(\".\",\"\") ;\nlet MessagesData = {\n    [id1]: { mid:id1 , date: new Date().toGMTString(), subject : \"hello\", body: \"hi sravan from bala\",fullName : \"sravan\", fromMail : \"bala@email.com\", to:[\"sravan@email.com\",\"bala@email.com\"],cc:[],unread:[\"sravan@email.com\",\"bala@email.com\"]},\n    [id2]: {mid: id2,date: new Date().toGMTString(), subject : \"hi\",body: \"hi sravan, bala from sravan\",fullName : \"sravan\", fromMail : \"sravan@email.com\", to:[\"sravan@email.com\"],cc:[], unread:[\"sravan@email.com\",\"bala@email.com\"]},\n}\nlet ToData = [\n    { mid: id1,toMail : \"sravan@email.com\"},\n    {mid: id2, toMail : \"sravan@email.com\"},\n    {mid: id2, toMail : \"bala@email.com\"},\n];\n\nexport const createUsers=() => \n{\n    if(!window.localStorage.getItem(\"users\")){\n        window.localStorage.setItem(\"users\",JSON.stringify(UsersData));\n    }\n}\n\nexport const createMessages=()=>{\n    if(!window.localStorage.getItem(\"mesages\")){\n        window.localStorage.setItem(\"messages\",JSON.stringify(MessagesData));\n    }\n}\n\nexport const createToBox= ()=>{\n    if(!window.localStorage.getItem(\"toMails\")){\n        window.localStorage.setItem(\"toMails\",JSON.stringify(ToData));\n    }\n}","import React, {UseState, useCallback, useEffect} from 'react';\nimport {MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\n// import {MDCTextField }from '@material-ui/textfield';\n// import {MDCTextField} from '@material/textfield';\nimport { FormControlLabel, TextField, Box } from '@material-ui/core';\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#00b494',\n          },\n          secondary: {\n            main: '#4caf50',\n          },\n    },\n  });\n\nfunction Input({...props}){\n    // const primary = \"#1b5e20\"; // #F44336\n    // const secondary = \"#4caf50\"\n    console.log(props)\n    useEffect(()=>{\n        // const textField = new MDCTextField(document.querySelector('.mdc-text-field__input'));\n    },[])\n    // const textField = new MDCTextField()\n    return (\n        <div className=\"loginControls\">\n            <MuiThemeProvider theme={theme} >\n                <TextField  {...props}   />\n            </MuiThemeProvider>\n        </div>\n    ) ;\n};\n\nexport default Input;\n","import React, {useState} from \"react\";\nimport { Button } from '@material-ui/core';\n\nfunction CustomButton(props){\n    console.log({...props})\n    return(\n        <div className=\"loginControls\">\n            <Button {...props}>{props.type}</Button>\n        </div>\n    );\n}\n\nexport default CustomButton;","\n\nconst getDbData = (type)=> {\n    const dbData = JSON.parse(window.localStorage.getItem(type));\n    return dbData;\n}\nconst writeToDb= (type,data)=>{\n    window.localStorage.setItem(type, JSON.stringify(data))\n    return true;\n}\n\nconst verifyUserEmailAndPassword = (email, password) => {\n        let dbData = getDbData(\"users\");\n        if(Object.keys(dbData).includes(email)){\n            let user = dbData[email];\n            if(user.password===password){\n                return user;\n            }\n            else{\n                return false;\n            }\n        }\n        else {\n            return false;\n        }\n}\n\nexport const postLogin = (inputData)=>{\n    const {email,password} = inputData;\n    const outputData = verifyUserEmailAndPassword(email,password);\n    if(outputData){\n\n            return {isError:false,value:outputData}\n    }\n    else {\n        return {isError:true,value:\"no user exists\"}\n    }\n}\nexport const sortByDate = (mails)=>{\n    console.log( mails.sort((a,b)=>new Date(b.date)-new Date(a.date)))\n    return mails.sort((a,b)=>new Date(b.date)-new Date(a.date));\n}\nexport const getMails=(mailType, user)=>{\n    let messagesDb = getDbData(\"messages\");\n    console.log(messagesDb)\n    let toMailDb = getDbData(\"toMails\");\n    let userMails=[];\n    if(mailType==\"inbox\"){\n        // let userMails=toMailDb.filter((data)=>data.toMail===user);\n        for  (let message of Object.values(messagesDb)){\n            console.log(message);\n            if(message.to.includes(user) || message.cc.includes(user)){\n                userMails.push(message)\n            }\n        }\n       \n    }\n    if(mailType==\"sent\"){\n        for  (let message of Object.values(messagesDb)){\n            if(message.fromMail.includes(user)){\n                userMails.push(message)\n            }\n        }\n    }\n    userMails = sortByDate(userMails);\n    return userMails;\n}\nexport const sendThisMail=(content)=>{\n    let db = getDbData(\"messages\");\n    db[content[\"mid\"]]=content;\n    console.log(db)\n    writeToDb(\"messages\",db);\n    return true;\n}\nexport const updateReadList=(mid, readBy)=>{\nlet db = getDbData(\"messages\")\nlet unread = db[mid].unread;\nunread = unread.filter(val=>val!==readBy);\ndb[mid].unread = unread;\nwriteToDb(\"messages\",db);\n}","import React, {useState, useEffect} from 'react'\nimport {createUsers, createMessages, createToBox} from './localStorage'; \nimport Input from \"./Input\";\nimport CustomButton from \"./CustomButton\";\nimport {MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport {postLogin} from \"./API\"\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#00b494',\n          },\n          secondary: {\n            main: '#4caf50',\n          },\n    },\n  });\n\nfunction Login(props){\n    const [error,setError] = useState({isError:false, value:\"\"})\n    if(!window.localStorage.getItem(\"users\")){\n        createUsers();\n        createMessages()\n        createToBox();\n    }\n    const formElements = [\"email\", \"password\"]\n    const handleSubmit = (e)=>{\n                e.preventDefault();\n                let formData = {};\n                formElements.map((value)=>{\n                    let formField = document.getElementById(\"login-\"+value)\n                    formData[value]=formField.value;\n                })\n            console.log(formData);\n           const result = postLogin(formData);\n           if(result.isError==true){\n               setError(result);\n           }\n           else {\n               props.handleLogin(result);\n           }\n\n    } \n    return (\n        <div className=\"App-login\"> \n            <form  action='none' onSubmit={handleSubmit}> \n                <MuiThemeProvider theme={theme}>\n                 <div className=\"login-header\">Sign In</div>\n                 {\n                     formElements.map((value)=>{\n                      return  <Input id={\"login-\"+value}  required={true} type={value} name={value} autoFocus={value==\"email\"?true:false} label={value} color={\"primary\"} variant=\"outlined\"  fullWidth={true} />   \n                     })\n                 }\n                {/* <Input  required={true} type=\"email\" name=\"email\" autoFocus={true} label=\"Email\" color=\"primary\" fullWidth={true} />\n                <Input required={true} type=\"password\" name=\"password\" label=\"Password\" color=\"primary\" fullWidth={true}  /> */}\n                <CustomButton variant=\"outlined\" color=\"secondary\" size=\"medium\" variant=\"contained\" fullWidth={true} type=\"submit\" value=\"Sign In\" className=\"custom-button\" />\n                  {error.isError?<div className=\"login-error\"> {error.value} </div> : null }\n                </MuiThemeProvider>\n           \n            </form>   \n        </div>\n    );\n\n};\n\nexport default Login;","import React, {useState} from \"react\";\nimport Input from \"./Input\"\n// import MenuIcon from \"@material-ui/icons/Menu\"\n// import './Header.css';\n// import './App.css';\n\nfunction Header(props){\n    const toggleExtraMenu =()=>{\n        document.querySelector(\".app-bar\").classList.toggle(\"app-bar-shrink\");\n        document.querySelector(\".extras-side-menu\").classList.toggle(\"side-menu-push\")\n        document.querySelector(\".app-content\").classList.toggle(\"app-content-shrink\")\n\n    }\n    return (\n        <div className=\"app-bar\">\n            \n            <div className=\"menu-icon\" onClick={toggleExtraMenu}>  </div>\n            <div className=\"app-search\"> \n                <input id=\"menuIcon\" type=\"text\" name=\"text\" placeholder=\"Search\"/>\n            </div>\n            <div className=\"inbox-count\"> </div>\n            <div className=\"notification\"> </div>\n            <div className=\"app-logout\" onClick={props.handleLogout}> </div>\n\n\n        </div>\n    )\n}\n\nexport default Header;","import React,{useState} from \"react\";\n\nfunction Menu(props){\n    return (\n        <div  className=\"menu\"> \n            <div  className=\"menu-content\"> \n                <button className=\"mail-compose-button\" onClick={props.handleCompose}> Compose Mail</button>\n                <div className=\"menu-folders\">Folders</div>\n                <div className=\"menu-categories\">Catergories</div>\n                <div className=\"menu-labels\">Labels</div>\n            </div>\n         </div>\n    )\n}\n\nexport default Menu;","import React, {useState} from 'react';\n\nfunction ExtrasSideMenu(){\n    return (\n        <div className=\"extras-side-menu\" > </div>\n    )\n}\n\nexport default ExtrasSideMenu;","import React, {useState} from \"react\";\nimport Checkbox from '@material-ui/core/Checkbox';\nimport {MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport {postLogin} from \"./API\"\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#00b494',\n          },\n          secondary: {\n            main: '#4caf50',\n          },\n    },\n  });\nfunction MailCard(props){\n    let {content} = props;\n    console.log(props, content);\n    return (\n    <li className=\"mail-item\" id={props.content.unread.includes(props.user)&&props.type===\"inbox\"?\"unreadMail\":\"\"} key={content.mid} onClick={()=>{props.handleReadPopup(props.content)}}>\n      <MuiThemeProvider theme={theme}>  <Checkbox className=\"mail-item-checkbox\" checked={false} size=\"small\" value={content.mid} color=\"primary\" /> </MuiThemeProvider> \n        <div className=\"mail-item-fname\"> {content.fullName} </div>\n        <div className=\"mail-item-subject\"> {content.subject} </div>\n        <div className=\"mail-item-date\"> { new Date(content.date).toLocaleString()} </div>\n     </li>  \n    )\n}\n\n\nexport default MailCard;","import React, { useState } from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport MailCard from \"./MailCard\";\nimport {getMails} from \"./API\"\nimport {updateReadList} from \"./API\"\nfunction MailBox(props){\n    const [mails,setMails] = useState(getMails(props.type, props.user))\n    const unread = [];\n    const handleReadPopup = (data)=>{\n        if(data){\n            if(data.unread.includes(props.user)){\n                updateReadList(data.mid,props.user)\n                console.log(\"soudnot\")\n                setMails(getMails(props.type, props.user))\n            }\n        }\n        props.handleReadPopup(data)\n    }\n\n\nreturn (\n    <div className=\"app-section\"> \n        <div className=\"mail-header\"> \n                <div className=\"mail-header-helper\"> \n                    <div className=\"read-count\">{props.type}({unread.length})</div>\n                    <div className=\"inbox-search\">\n                        <input className=\"search-field\" />\n                        <button className=\"search-button\">Search</button>\n                    </div>\n                </div>\n                <div className=\"mail-header-tools\"> \n                    <div className=\"mail-header-tool-section mail-header-tool\"> \n                        <img src=\"/sync-24px.svg\" className=\"mail-header-tool-refresh\" /> \n                        <img src=\"/remove_red_eye-24px.svg\" className=\"mail-header-tool-eye\" />\n                        <img src=\"/warning-24px.svg\" className=\"mail-header-tool-warning\" />\n                        <img src=\"/delete-24px.svg\" className=\"mail-header-tool-delete\" /> \n                     </div>\n                    <div className=\"mail-header-tool-nav mail-header-tool\"> \n                        <img src=\"/arrow_back-24px.svg\" className=\"mail-header-tool-back\" /> \n                        <img  src=\"/arrow_back-24px.svg\" className=\"mail-header-tool-fwd\"/> \n                    </div>\n                </div>\n\n        </div>\n        <ul className=\"mail-list\">\n                    {\n                        mails?\n                        mails.map((mail)=>{\n                            return (<MailCard key={mail.mid} user={props.user} type=\"inbox\" content={mail} handleReadPopup={handleReadPopup} />) \n                        }):<div>ohoo this space is empty </div>\n                    }\n        </ul>\n    </div>\n)\n}\n\nexport default MailBox;","import React, { useState } from \"react\";\n\n\n\nfunction MailAddress(props) {\n    const [text,setText] = useState();\n    const handleKeys=(e)=>{\n        if(e.keyCode===13 || e.keyCode===188){\n            console.log(e.target.value, e.target.value)\n            let mail =e.target.value.replace(/\\s|,/gi,\"\");\n            if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(mail)){\n                props.handleAccept(props.type,mail)\n            }\n            e.target.value=\"\"\n        }\n        else{\n            console.log(e.target.value)\n            // setText(e.target.value)\n        }\n        \n    }\n    return (\n        \n        <div className=\"popup-to-wrapper\" >\n            <div className=\"role-section\">{props.type}:</div>\n            <div className=\"popup-to\">\n                {\n                    props.mails.map((val, index) => {\n                        return <span className=\"to-accepted\">\n                            <span className=\"mail-text\">{val}</span>\n                            <img src=\"/close-24px.svg\" className=\"removeIt\" onClick={() => { props.handleRemove(props.type,val) }} />\n                        </span>\n                    })\n                }\n                <input id=\"to\" className=\"textarea-to\" onKeyUp={handleKeys} value={text} />\n            </div>\n        </div>\n    )\n}\nexport default MailAddress;","import React, { useState } from \"react\";\nimport MailAddress from \"./Address\"\nimport {sendThisMail} from \"./API\"\nfunction Overlay(props) {\n    const [toMails, setToMails] = useState([])\n    const [ccMails, setCcMails] = useState([]);\n    const [subject, setSubject]=useState();\n    const [body,setBody] = useState();\n    const handleClose = (e) => {\n        if(e){\n            e.preventDefault();\n            e.stopPropagation();\n        }\n        props.handleClose();\n    }\n    const handleSend = ()=>{\n        if(toMails.length){\n        let bodyContent = document.querySelector(\"#popup-body\").value;\n        let subjectContent = document.querySelector(\"#popup-subject\").value;\n        let mid =(Math.random()*8).toString(16).replace(\".\",\"\") ;\n        let mailContent ={ mid:mid, date: new Date().toGMTString(), subject : subjectContent, body: bodyContent,fullName : props.fullName, fromMail : props.user, to: toMails,cc:ccMails,unread:[...toMails,...ccMails]}\n        console.log(mailContent)\n        if(sendThisMail(mailContent)){\n            handleClose();\n        }\n    }\n        \n\n}\n   \n    const handleRemove = (type, mail) => {\n        console.log(type, mail)\n        if (type === \"to\") {\n            setToMails(toMails.filter(val => val !== mail));\n        }\n        if (type === \"cc\") {\n            setCcMails(ccMails.filter(val => val !== mail));\n        }\n    }\n    const handleAccept = (type, mail) => {\n        if (type === \"to\") {\n            console.log(mail)\n            setToMails([...toMails, mail])\n        }\n        if (type === \"cc\") {\n            setCcMails([...ccMails, mail])\n        }\n    }\n    return (\n        <div className=\"app-overlay\" onClick={handleClose}>\n            <div className=\"overlay-content\">\n                <div className=\"popup-box\" onClick={(e) => { e.stopPropagation(); }}>\n                    {\n                        props.type === \"inbox\" ?\n                            <div className=\"popup-from\">\n                                From<div className=\"from\" contentEditable>\n                                </div >\n                            </div> : null\n                    }\n                    <MailAddress type=\"to\" handleRemove={handleRemove} handleAccept={handleAccept} mails={toMails} />\n                    <MailAddress type=\"cc\" handleRemove={handleRemove} handleAccept={handleAccept} mails={ccMails} />\n\n                    <div className=\"popup-to-wrapper\" >\n                        <div className=\"role-section\">sub:</div>\n                        <div className=\"popup-to\">\n                            <input id=\"popup-subject\" className=\"textarea-to\" value={subject} />\n                        </div>\n                    </div>\n                    <div className=\"popup-body\" id=\"body-wrapper\">\n                    <textarea id=\"popup-body\" className=\"textarea-to\" value={body} > </textarea>\n\n                    </div>\n                    <div className=\"popup-handle\">\n                        <button className=\"close\" onClick={handleClose}>Close</button>\n                        <button className=\"send\" onClick={handleSend}>Send</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Overlay;","import React, { useState } from \"react\";\n\n\n\nfunction ReadAddress(props) {\n    const [text,setText] = useState();\n    const handleKeys=(e)=>{\n        if(e.keyCode===13 || e.keyCode===188){\n            console.log(e.target.value, e.target.value)\n            let mail =e.target.value.replace(/\\s|,/gi,\"\");\n            if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(mail)){\n                props.handleAccept(props.type,mail)\n            }\n            e.target.value=\"\"\n        }\n        else{\n            console.log(e.target.value)\n            // setText(e.target.value)\n        }\n        \n    }\n    return (\n        \n        <div className=\"popup-to-wrapper\" >\n            <div className=\"role-section\">{props.type}:</div>\n            <div className=\"popup-from\">\n                {\n                    props.mails.map((val, index) => {\n                        return <span className=\"to-accepted\">\n                            <span className=\"mail-text\">{val}</span>\n                            {/* <img src=\"/close-24px.svg\" className=\"removeIt\" onClick={() => { props.handleRemove(props.type,val) }} /> */}\n                        </span>\n                    })\n                }\n                {/* <input id=\"to\" className=\"textarea-to\" onKeyUp={handleKeys} value={text} /> */}\n            </div>\n        </div>\n    )\n}\nexport default ReadAddress;","import React, { useState } from \"react\";\nimport MailAddress from \"./Address\"\nimport ReadAddress from \"./ReadAddress\";\nimport {sendThisMail} from \"./API\"\nfunction ReadOverlay(props) {\n    console.log(props)\n    const [toMails, setToMails] = useState(props.mailData.to)\n    const [ccMails, setCcMails] = useState(props.mailData.cc);\n    const [subject, setSubject]=useState(props.mailData.subject);\n    const [body,setBody] = useState(props.mailData.body);\n    const [fromMail, setFromMail]=useState([props.mailData.fromMail]);\n    const handleClose = (e) => {\n        if(e){\n            e.preventDefault();\n            e.stopPropagation();\n        }\n        props.handleClose();\n    }\n    return (\n        <div className=\"app-overlay\" onClick={handleClose}>\n            <div className=\"overlay-content\">\n                <div className=\"popup-box\" onClick={(e) => { e.stopPropagation(); }}>\n                    <ReadAddress type=\"from\"  mails={fromMail} />\n                    <ReadAddress type=\"to\" mails={toMails} />\n                    <ReadAddress type=\"cc\"   mails={ccMails} />\n\n                    <div className=\"popup-to-wrapper\" >\n                        <div className=\"role-section\">sub:</div>\n                        <div className=\"popup-from\">\n                            <input disabled id=\"popup-subject\" className=\"textarea-to\" value={subject} />\n                        </div>\n                    </div>\n                    <div className=\"popup-body\" id=\"body-wrapper\">\n                    <textarea disabled id=\"popup-body\" className=\"textarea-to\" value={body} > </textarea>\n\n                    </div>\n                    <div className=\"popup-from-handle\">\n                        <button className=\"close\" onClick={handleClose}>Close</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ReadOverlay;","import React, {useState, useEffect} from \"react\";\nimport Header from \"./Header\";\nimport Menu from \"./Menu\";\nimport ExtrasSideMenu from \"./ExtrasSideMenu\"\nimport MailBox from \"./MailBox\"\nimport Overlay from \"./Overlay\";\nimport ReadOverlay from \"./ReadOverlay\";\nfunction Dashboard(props){\n    const [popup, setPopup] =useState(false);\n    const [readPopup,setreadPopup] = useState(false);\n    const [mailData,setMailData]=useState({});\n    const handleReadPopup = (data)=>{\n        console.log(data)\n        if(data)\n            setMailData(data)\n        console.log(mailData)\n        setreadPopup(!readPopup)\n    }\n    const handleCompose = ()=>{\n        setPopup(!popup)\n    }\n    return (\n        <div className=\"dashboard\">\n            <ExtrasSideMenu />\n            <Header handleLogout={props.handleLogout} />\n            <div className=\"app-content\">\n                <Menu handleCompose={handleCompose}/>\n                <MailBox handleReadPopup={handleReadPopup} type=\"inbox\" user={props.userData.email} />\n            </div>\n            {\n              popup?<Overlay type={\"compose\"} handleClose={handleCompose} fullName={props.userData.fullName} user={props.userData.email} />:null\n            }\n            {\n                readPopup?<ReadOverlay type={\"inbox\"} handleClose={handleReadPopup} mailData={mailData} />:null\n            }\n        </div>\n    )\n}\n\nexport default Dashboard;","import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Login from './Login';\nimport Dashboard from \"./Dashboard\"\n\nfunction App() {\n  let initialData = { isLogin: false, value: \"\" };\n  let accessToken = window.localStorage.getItem(\"accessToken\");\n  if (accessToken) {\n    initialData = { isLogin: true, value: JSON.parse(window.localStorage.getItem(\"currentUser\")) };\n  }\n  const [loginState, setLoginState] = useState(initialData);\n  const handleLogin = (result) => {\n    window.localStorage.setItem(\"accessToken\", result.value.email)\n    window.localStorage.setItem(\"currentUser\", JSON.stringify(result.value));\n    console.log(result)\n    setLoginState({ isLogin: true, value: result.value })\n  }\n  const handleLogout = ()=>{\n    window.localStorage.removeItem(\"accessToken\");\n    window.localStorage.removeItem(\"currentUser\");\n    setLoginState({ isLogin: false, value: \"\"})\n\n  }\n  return (\n    <div className=\"App\">\n      {/* <div className=\"App-header\"></div>  */}\n      {!loginState.isLogin ?\n        <Login handleLogin={handleLogin} /> :\n        <Dashboard handleLogout={handleLogout}  userData={loginState.value} />\n      }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}